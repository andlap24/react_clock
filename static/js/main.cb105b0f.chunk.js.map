{"version":3,"sources":["Clock/Clock.jsx","App.jsx","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","clearInterval","props","name","isVisible","className","style","visibility","React","Component","App","isClockVisible","nameRandomizer","prevState","previousName","currentName","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,G,YAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WAAO,IACtBJ,EAAS,EAAKD,MAAdC,KAER,EAAKK,SAAS,CAAEL,KAAM,IAAIC,OAC1BK,QAAQC,IAAIP,EAAKQ,wBAChB,OAXP,6CAeIC,cAAcP,KAAKC,SAfvB,+BAkBY,IAAD,EACqBD,KAAKQ,MAAzBC,EADD,EACCA,KAAMC,EADP,EACOA,UACNZ,EAASE,KAAKH,MAAdC,KAER,OACE,yBAAKa,UAAU,cACb,mDAAqBF,IACrB,uBAAGG,MAAO,CAAEC,WAAW,GAAD,OAAKH,KAA3B,gBAEG,IACAZ,EAAKQ,2BA5BhB,GAA2BQ,IAAMC,YCiElBC,E,4MA9DbnB,MAAQ,CACNoB,eAAgB,UAChBR,KAAM,I,EAGRS,eAAiB,kBACf,EAAKf,UAAS,SAACgB,GACb,IAAMC,EAAeD,EAAUV,KACzBY,EAAcC,KAAKC,MAAsB,IAAhBD,KAAKE,UAKpC,OAFApB,QAAQC,IAAR,qCAA0Ce,EAA1C,eAA6DC,IAEtD,CACLZ,KAAMY,O,uDAKF,IAAD,SAC0BrB,KAAKH,MAA9BoB,EADD,EACCA,eAAgBR,EADjB,EACiBA,KAExB,OACE,yBAAKE,UAAU,WACb,yBAAKA,UAAU,OAEkB,YAA9BX,KAAKH,MAAMoB,eACR,kBAAC,EAAD,CAAOR,KAAMA,IACb,uBAAGE,UAAU,qBAAb,oCAGJ,yBAAKA,UAAU,sBACb,4BACEc,KAAK,SACLd,UAAU,kBACVe,QAAS,WACY,WAAnBT,EACI,EAAKd,SAAS,CAAEc,eAAgB,YAChC,EAAKd,SAAS,CAAEc,eAAgB,aAGP,YAA9BjB,KAAKH,MAAMoB,eAA+B,OAAS,QAGtD,4BACEQ,KAAK,SACLd,UAAU,gBACVe,QAAS,kBAAM,EAAKR,mBAHtB,gB,GA7CMJ,IAAMC,WCFxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cb105b0f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      const { date } = this.state;\n\n      this.setState({ date: new Date() });\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { name, isVisible } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"App__clock\">\n        <h1>{`React clock #${name}`}</h1>\n        <p style={{ visibility: `${isVisible}` }}>\n          Current time:\n          {' '}\n          {date.toLocaleTimeString()}\n        </p>\n      </div>\n    )\n  }\n}\n\nClock.propTypes = {\n  isVisible: PropTypes.string.isRequired,\n  name: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: 'visible',\n    name: 24,\n  }\n\n  nameRandomizer = () => (\n    this.setState((prevState) => {\n      const previousName = prevState.name;\n      const currentName = Math.floor(Math.random() * 1000);\n\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${previousName} to ${currentName}`);\n\n      return {\n        name: currentName,\n      };\n    })\n  );\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"App\">\n\n          {this.state.isClockVisible === 'visible'\n            ? <Clock name={name} />\n            : <p className=\"App__clock-hidden\">the aspect of time is relative:)</p>\n          }\n\n          <div className=\"App__button button\">\n            <button\n              type=\"button\"\n              className=\"button__toggler\"\n              onClick={() => {\n                isClockVisible === 'hidden'\n                  ? this.setState({ isClockVisible: 'visible' })\n                  : this.setState({ isClockVisible: 'hidden' });\n              }}\n            >\n              {this.state.isClockVisible === 'visible' ? 'hide' : 'show'}\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button__magic\"\n              onClick={() => this.nameRandomizer()}\n            >\n              magic\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}